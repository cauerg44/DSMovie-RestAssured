<?xml version="1.0" encoding="UTF-8"?><testrun name="Rerun MovieControllerRA" project="dsmovie-restassured" tests="7" started="7" failures="0" errors="0" ignored="0">
  <testsuite name="com.devsuperior.dsmovie.controllers.MovieControllerRA" time="3.786" displayname="MovieControllerRA" uniqueid="[engine:junit-jupiter]/[class:com.devsuperior.dsmovie.controllers.MovieControllerRA]">
    <testcase name="findAllShouldReturnOkWhenMovieNoArgumentsGiven" classname="com.devsuperior.dsmovie.controllers.MovieControllerRA" time="3.255" displayname="findAllShouldReturnOkWhenMovieNoArgumentsGiven()" uniqueid="[engine:junit-jupiter]/[class:com.devsuperior.dsmovie.controllers.MovieControllerRA]/[method:findAllShouldReturnOkWhenMovieNoArgumentsGiven()]"/>
    <testcase name="findAllShouldReturnPagedMoviesWhenMovieTitleParamIsNotEmpty" classname="com.devsuperior.dsmovie.controllers.MovieControllerRA" time="0.517" displayname="findAllShouldReturnPagedMoviesWhenMovieTitleParamIsNotEmpty()" uniqueid="[engine:junit-jupiter]/[class:com.devsuperior.dsmovie.controllers.MovieControllerRA]/[method:findAllShouldReturnPagedMoviesWhenMovieTitleParamIsNotEmpty()]"/>
    <testcase name="insertShouldReturnUnprocessableEntityWhenAdminLoggedAndBlankTitle" classname="com.devsuperior.dsmovie.controllers.MovieControllerRA" time="0.001" displayname="insertShouldReturnUnprocessableEntityWhenAdminLoggedAndBlankTitle()" uniqueid="[engine:junit-jupiter]/[class:com.devsuperior.dsmovie.controllers.MovieControllerRA]/[method:insertShouldReturnUnprocessableEntityWhenAdminLoggedAndBlankTitle()]"/>
    <testcase name="findByIdShouldReturnNotFoundWhenIdDoesNotExist" classname="com.devsuperior.dsmovie.controllers.MovieControllerRA" time="0.001" displayname="findByIdShouldReturnNotFoundWhenIdDoesNotExist()" uniqueid="[engine:junit-jupiter]/[class:com.devsuperior.dsmovie.controllers.MovieControllerRA]/[method:findByIdShouldReturnNotFoundWhenIdDoesNotExist()]"/>
    <testcase name="insertShouldReturnUnauthorizedWhenInvalidToken" classname="com.devsuperior.dsmovie.controllers.MovieControllerRA" time="0.002" displayname="insertShouldReturnUnauthorizedWhenInvalidToken()" uniqueid="[engine:junit-jupiter]/[class:com.devsuperior.dsmovie.controllers.MovieControllerRA]/[method:insertShouldReturnUnauthorizedWhenInvalidToken()]"/>
    <testcase name="findByIdShouldReturnMovieWhenIdExists" classname="com.devsuperior.dsmovie.controllers.MovieControllerRA" time="0.001" displayname="findByIdShouldReturnMovieWhenIdExists()" uniqueid="[engine:junit-jupiter]/[class:com.devsuperior.dsmovie.controllers.MovieControllerRA]/[method:findByIdShouldReturnMovieWhenIdExists()]"/>
    <testcase name="insertShouldReturnForbiddenWhenClientLogged" classname="com.devsuperior.dsmovie.controllers.MovieControllerRA" time="0.001" displayname="insertShouldReturnForbiddenWhenClientLogged()" uniqueid="[engine:junit-jupiter]/[class:com.devsuperior.dsmovie.controllers.MovieControllerRA]/[method:insertShouldReturnForbiddenWhenClientLogged()]"/>
  </testsuite>
</testrun>
